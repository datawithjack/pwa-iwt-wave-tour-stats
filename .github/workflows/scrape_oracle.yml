name: Oracle HeatWave Wave Tour Events Scraper

on:
  schedule:
    # Run daily at 6:00 AM UTC (adjust timezone as needed)
    - cron: '0 6 * * *'
  
  # Allow manual triggering of the workflow
  workflow_dispatch:
    inputs:
      force_run:
        description: 'Force run even if no changes detected'
        required: false
        default: false
        type: boolean

jobs:
  scrape-oracle-events:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
        
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Setup SSH key for Oracle connection
      env:
        SSH_PRIVATE_KEY: ${{ secrets.ORACLE_SSH_PRIVATE_KEY }}
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/ssh-key-2025-07-09.key
        chmod 600 ~/.ssh/ssh-key-2025-07-09.key
        ssh-keyscan -H 129.151.144.124 >> ~/.ssh/known_hosts
        
    - name: Run Oracle Events Scraper
      env:
        ORACLE_DB_PASSWORD: ${{ secrets.ORACLE_DB_PASSWORD }}
      run: |
        python daily_events_check_and_update_oracle.py
        
    - name: Upload artifacts on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: error-logs
        path: |
          *.log
          wave_tour_events_raw.json
        retention-days: 7
        
    - name: Commit and push changes
      if: success()
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Add any new or modified files
        git add -A
        
        # Check if there are changes to commit
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "ü§ñ Automated Oracle HeatWave events update - $(date '+%Y-%m-%d %H:%M:%S')"
          git push
        fi
        
    - name: Notify on completion
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "‚úÖ Oracle HeatWave scraping completed successfully"
        else
          echo "‚ùå Oracle HeatWave scraping failed"
        fi

  # Optional: Add a notification job for failures
  notify-failure:
    needs: scrape-oracle-events
    runs-on: ubuntu-latest
    if: failure()
    
    steps:
    - name: Send failure notification
      env:
        WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
      run: |
        if [ -n "$WEBHOOK_URL" ]; then
          curl -H "Content-Type: application/json" \
               -d "{\"content\":\"üö® Oracle HeatWave scraping workflow failed! Check the logs: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}\"}" \
               "$WEBHOOK_URL"
        fi 